docker run -d -p 5000:5000 --restart=always -v /opt/registry-var/auth/:/auth/ -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v /opt/registry-var/:/var/lib/registry/ registry:2


{
  "registry-mirrors": ["http://harbor.test.com"],
  "insecure-registries": ["harbor.test.com","registry.cn-shenzhen.aliyuncs.com"],
  "max-concurrent-downloads": 10
}


信任docker 仓库
docker service update ops --with-registry-auth

docker login 


创建traefik
docker service create \
 --name traefik --constraint=node.role==manager \
 --publish 80:80 --publish 8080:8080 \
 --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
 --network mynet traefik \
 --docker \
 --docker.swarmMode \
 --docker.domain=test.com \
 --docker.watch \
 --api

docker service create --name whoami0 --label traefik.port=80 --network mynet containous/whoami

docker service create --name whoami1 --label traefik.port=80 --network mynet --label traefik.backend.loadbalancer.sticky=true  containous/whoami

docker service create --name nginx --network mynet --label traefik.port=80 --label traefik.frontend.rule=www.test.com nginx

docker service create \
--name whoami \
--label traefik.port=80 \
--label traefik.frontend.rule=Host:test.ruiming.me \
--label traefik.docker.network=traefik-net \
--network traefik-net \
emilevauge/whoami


docker service create \
--name nginx \
--label traefik.port=80 \
--label traefik.frontend.rule=Host:www.test.com \
--label traefik.docker.network=mynet \
--network mynet \
nginx

创建porttainer
docker service create \
--name portainer \
--publish 9000:9000 \
--replicas=1 \
--constraint 'node.role == manager' \
--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
--mount src=portainer,dst=/data \
--label traefik.port=9000 \
--label traefik.frontend.rule=Host:dashboard.test.com \
--label traefik.docker.network=mynet \
--network mynet \
portainer/portainer \
-H unix:///var/run/docker.sock


docker service create \
--name docker-proxy \
--global
--mount type=bind,source=/var/run/docker.sock:/var/run/docker.sock \
--network mynet \
rancher/socat-docker
